{"name": "Test delete invalid books", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 400\n +  where 401 = <Response [401]>.status_code", "trace": "self = <testcases.api.test_delete_book.TestDeleteBook object at 0x000001BE3C22EC60>\naccount = <data_object.account.Account object at 0x000001BE3F57F500>\nbook = <data_object.book.Book object at 0x000001BE3F57F590>\n\n    @allure.title('Test delete invalid books')\n    @pytest.mark.parametrize(\"account\", Account.get_list_account_from_json('resources/test_data/account.json','valid'))\n    @pytest.mark.parametrize(\"book\", Book.get_list_book_from_json('resources/test_data/book.json','invalid'))\n    def test_delete_invalid_book_unsuccessfully_with_api(self, account, book):\n        response = BookHelper.delete_a_book_from_collection(AccountHelper.get_token(account), account.user_id, book.isbn)\n        error_message = response.json()[\"message\"]\n>       assert response.status_code == 400\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\ntestcases\\api\\test_delete_book.py:26: AssertionError"}, "parameters": [{"name": "book", "value": "<data_object.book.Book object at 0x000001BE3F57F590>"}, {"name": "account", "value": "<data_object.account.Account object at 0x000001BE3F57F500>"}], "start": 1702368255060, "stop": 1702368257539, "uuid": "0fa0ede9-455d-45cd-8918-988862fe0320", "historyId": "d7fa08cf7fdc18a036579462c560c842", "testCaseId": "139f1d5a27073d38eee4f9b66fccf1dd", "fullName": "testcases.api.test_delete_book#test_delete_invalid_book_unsuccessfully_with_api", "labels": [{"name": "parentSuite", "value": "API Test"}, {"name": "suite", "value": "Test Delete Book"}, {"name": "subSuite", "value": "TestDeleteBook"}, {"name": "host", "value": "VNNOT02222"}, {"name": "thread", "value": "12448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api.test_delete_book"}]}