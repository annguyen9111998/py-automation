{"name": "Test delete a valid book", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: C:\\Users\\annguyenq\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nThe chromedriver version cannot be discovered\n; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "service = <selenium.webdriver.chrome.service.Service object at 0x000002496BE4CD70>\noptions = <selenium.webdriver.chrome.options.Options object at 0x000002496BC5A570>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.selenium_manager.SeleniumManager object at 0x000002496BE25070>\noptions = <selenium.webdriver.chrome.options.Options object at 0x000002496BC5A570>\n\n    def driver_location(self, options: BaseOptions) -> str:\n        \"\"\"\n        Determines the path of the correct driver.\n        :Args:\n         - browser: which browser to get the driver path for.\n        :Returns: The driver path to use\n        \"\"\"\n    \n        logger.debug(\"Applicable driver not found; attempting to install with Selenium Manager (Beta)\")\n    \n        browser = options.capabilities[\"browserName\"]\n    \n        args = [str(self.get_binary()), \"--browser\", browser, \"--output\", \"json\"]\n    \n        if options.browser_version:\n            args.append(\"--browser-version\")\n            args.append(str(options.browser_version))\n    \n        binary_location = getattr(options, \"binary_location\", None)\n        if binary_location:\n            args.append(\"--browser-path\")\n            args.append(str(binary_location))\n    \n        proxy = options.proxy\n        if proxy and (proxy.http_proxy or proxy.ssl_proxy):\n            args.append(\"--proxy\")\n            value = proxy.ssl_proxy if proxy.sslProxy else proxy.http_proxy\n            args.append(value)\n    \n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n    \n>       result = self.run(args)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ['C:\\\\Users\\\\annguyenq\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome', '--output', 'json']\n\n    @staticmethod\n    def run(args: List[str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing process: {command}\")\n        try:\n            completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"][\"message\"]\n        except Exception as err:\n            raise WebDriverException(f\"Unsuccessful command executed: {command}; {err}\")\n    \n        if completed_proc.returncode:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: C:\\Users\\annguyenq\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           The chromedriver version cannot be discovered\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:121: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture(scope=\"function\", autouse= True)\n    def setup_driver():\n>       DriverManager.init_driver(pytest.driver_conf)\n\ntestcases\\ui\\conftest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\driver\\driver_manager.py:16: in init_driver\n    cls.driver = driver_mapping[config.driver].create_driver(config)\ncore\\driver\\driver_types\\chrome_driver.py:8: in create_driver\n    options = webdriver.Chrome()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:47: in __init__\n    self.service.path = DriverFinder.get_path(self.service, self.options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <selenium.webdriver.chrome.service.Service object at 0x000002496BE4CD70>\noptions = <selenium.webdriver.chrome.options.Options object at 0x000002496BC5A570>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n>           raise NoSuchDriverException(f\"Unable to obtain {service.path} using Selenium Manager; {err}\")\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: C:\\Users\\annguyenq\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           The chromedriver version cannot be discovered\nE           ; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:44: NoSuchDriverException"}, "parameters": [{"name": "book", "value": "<data_object.book.Book object at 0x000002496BE4CDA0>"}, {"name": "account", "value": "<data_object.account.Account object at 0x000002496BE4CD40>"}], "start": 1702395291545, "stop": 1702395291545, "uuid": "6feb417a-5be0-46df-8d83-19f184b785c5", "historyId": "5e614d437f73d86ca7bf70c9803424c7", "testCaseId": "81c9aef85fc2ea69820a2d4d49eabb2c", "fullName": "testcases.ui.test_delete_book#test_delete_book_with_ui", "labels": [{"name": "suite", "value": "Test Delete Book"}, {"name": "parentSuite", "value": "UI Test"}, {"name": "subSuite", "value": "TestDeleteBook"}, {"name": "host", "value": "VNNOT02222"}, {"name": "thread", "value": "6408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.ui.test_delete_book"}]}